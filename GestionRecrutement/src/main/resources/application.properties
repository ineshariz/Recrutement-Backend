<<<<<<< Upstream, based on branch 'master' of https://github.com/ineshariz/Recrutement-Backend.git
spring.jackson.serialization.fail-on-empty-beans=false

#logging.level.org.springframework.web=DEBUG

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
#server.servlet.context-path=/annuaire
#spring.queries.users-query=select email, pass from user where email=?
# Connection url for the database "netgloo_blog"
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

=======
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.jdbc.Driver
>>>>>>> a6aa07e ok
spring.datasource.url = jdbc:mysql://localhost:3306/recrutement?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = admin
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
<<<<<<< Upstream, based on branch 'master' of https://github.com/ineshariz/Recrutement-Backend.git
server.port= 8088

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
=======
server.port=8081






>>>>>>> a6aa07e ok
